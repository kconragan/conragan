---
// --- 1. DEFINE PROPS ---
interface Props {
  activeCollection?: 'all' | 'posts' | 'links' | 'notes' | 'divelogs';
}
const { activeCollection } = Astro.props;

// --- 2. DEFINE BASE NAVIGATION LINKS ---
const baseNavLinks = [
  { href: '/blog/', label: 'All', collection: 'all' },
  { href: '/blog/posts/', label: 'Posts', collection: 'posts' },
  { href: '/blog/links/', label: 'Links', collection: 'links' },
  { href: '/blog/notes/', label: 'Notes', collection: 'notes' },
  { href: '/blog/logbook/', label: 'Dive Logs', collection: 'divelogs' },
];

// --- 3. PRE-CALCULATE ACTIVE STATE (THE FIX) ---
// By mapping over the links here, we create a new array with the active
// state already calculated. This is a more robust pattern that avoids
// potential build-process bugs inside the template loop.
const navLinks = baseNavLinks.map(link => ({
  ...link, // copy the original link properties (href, label, collection)
  isActive: activeCollection === link.collection,
}));
---

<ul class="post-filter">
  {
    /* --- 4. RENDER THE PRE-CALCULATED LINKS --- */
    navLinks.map((link) => (
      <li>
        <a href={link.href} aria-current={link.isActive ? 'page' : false}>
          {link.label}
        </a>
      </li>
    ))
  }
</ul>
