---
interface Props {
  id: string; // This will now accept either an ID or a URL
  title?: string;
  aspect?: string;
  params?: Record<string, string>;
  poster?: string;
  webp?: boolean;
  defaultPoster?: string;
}

const {
  id, // This is now either the ID or the URL
  title = "YouTube video",
  aspect = "16/9",
  params,
  poster,
  webp = false,
  defaultPoster = `https://img.youtube.com/vi/{id}/maxresdefault.jpg`,
  ...rest
} = Astro.props as Props;

const searchParams = new URLSearchParams(params);

// Regular expression to extract YouTube ID (from eleventy-plugin-youtube-embed)
const urlPattern =
  /(?=(\s*))\1(?:<a [^>]*?>)??(?=(\s*))\2(?:https?:\/\/)??(?:w{3}\.)??(?:youtube\.com|youtu\.be)\/(?:watch\?v=|embed\/|shorts\/)??([A-Za-z0-9-_]{11})(?:[^\s<>]*)(?=(\s*))\4(?:<\/a>)??(?=(\s*))\5/;

/**
 * Extract a YouTube ID from a URL if it matches the pattern.
 * @param url URL to test
 * @returns A YouTube video ID or undefined if none matched
 */
function getYouTubeId(input: string): string {
  const match = input.match(urlPattern);
  return match?.[3] || input; // Return the matched ID or the original input
}

const videoId = getYouTubeId(id); // Use the function


const fallbackSrc = poster
  ? webp && "image/webp" in document.createElement("img")
    ? poster.replace(/\.[^/.]+$/, ".webp")
    : poster
  : defaultPoster.replace("{id}", videoId); //use the videoId variable

---

<div
  class="youtube-embed-container"
  style={`--aspect-ratio: ${aspect};`}
    data-thumbnail-url={fallbackSrc}
  {...rest}
>
  <iframe
    src={`https://www.youtube-nocookie.com/embed/${videoId}?${searchParams.toString()}`}
    title={title}
    aria-label={title}
    loading="lazy"
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
    allowfullscreen
  >
  </iframe>
</div>

<style>
.youtube-embed-container {
  position: relative;
  width: 100%;
  padding-bottom: calc(100% / (var(--aspect-ratio))); /* Responsive aspect ratio */
  overflow: hidden;
  background-color: black; /* Default background */
}

.youtube-embed-container iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0; /* Remove default iframe border */
}
</style>
<script is:inline>
// Use JavaScript to set background image after component mounts
document.querySelectorAll('.youtube-embed-container').forEach(container => {
    const thumbnailUrl = container.dataset.thumbnailUrl;
    if(thumbnailUrl) {
        const img = new Image();
        img.onload = () => {
            container.style.backgroundImage = `url(${thumbnailUrl})`;
            container.style.backgroundSize = 'cover';
            container.style.backgroundPosition = 'center';
        }
        img.onerror = () => {
          console.error("Failed to load image at", thumbnailUrl)
        }
        img.src = thumbnailUrl;
    }
});
</script>
